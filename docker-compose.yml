version: '3.4'

services:

  #Setting up the DNS on host machine everything works good, meaning we can use whoami.docker and other.docker!
  dns:
    image: andyshinn/dnsmasq
    cap_add: 
      - NET_ADMIN
    ports:
      - "127.0.0.2:53:53/udp"
      - "127.0.0.2:53:53/tcp"
    command: |
      --address=/docker/127.0.0.2 
      --address=/test.ping/127.0.0.3 
      --host-record=postgresql.docker,127.0.0.4 
      --filterwin2k --dns-forward-max=300 -q --dns-loop-detect --log-facility=-

  #The reverse HTTP proxy
  nginx-proxy:
    image: jwilder/nginx-proxy
    ports:
      - "127.0.0.2:80:80"
    environment:
        #192.168.65.2 is (usually) the docker host on my tests, discovered by checking which networks were reachable from a container
      - "DOCKER_HOST=tcp://192.168.65.2:2375"

  "whoami.docker":
    image: jwilder/whoami
    environment:
      - VIRTUAL_HOST=whoami.docker

  "other.docker":
    image: jwilder/whoami
    environment:
      - VIRTUAL_HOST=other.docker

  "postgresql.docker":
    image: postgres:alpine
    ports:
      - "127.0.0.4:5432:5432"
    environment: 
      - POSTGRES_PASSWORD=example
  
  # Busybox to be able to test DNS resolution inside docker network
  busybox:
    image: busybox
    container_name: internal_testing_box
    command: "watch -n 15 ping 127.0.0.1 -c 2"
